C51 COMPILER V9.54   KALMANFILTER                                                          10/09/2018 19:53:03 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KALMANFILTER
OBJECT MODULE PLACED IN KalmanFilter.OBJ
COMPILER INVOKED BY: E:\KeilC51\C51\BIN\C51.EXE KalmanFilter.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <STC15W4K48S4.h>       //STC15W4K48S4 专用头文件
   2          #include "KalmanFilter.h"  //卡尔曼滤波算法
   3          
   4          /**
   5           * 一阶卡尔曼滤波，退化为惯性滤波
   6           *
   7           * @author KingBoy (2018/5/20)
   8           *
   9           * @param ResrcData
  10           * @param ProcessNiose_Q
  11           * @param MeasureNoise_R
  12           *
  13           * @return int
  14           */
  15          int RCLowPassFilter_ax(int ResrcData, int ProcessNiose_Q, int MeasureNoise_R)
  16          {
  17   1              int R = MeasureNoise_R;
  18   1              int Q = ProcessNiose_Q;
  19   1              static int ax_last;//static 函数退出后变量值保留
  20   1              int ax_mid = ax_last;
  21   1              long ax_now;
  22   1              static int ax_p_last;
  23   1              long p_mid;
  24   1              long p_now;
  25   1              int kg;
  26   1              long temp;
  27   1              ax_mid = ax_last;
  28   1              p_mid = ax_p_last + Q;
  29   1              temp = p_mid << 15;
  30   1              kg = (temp / ((long)p_mid + R));
  31   1              ax_now = ax_mid + (((long)kg * (ResrcData - ax_mid)) >> 15);
  32   1              p_now = ((long)p_mid * (32768 - kg)) >> 15;
  33   1              ax_p_last = p_now;
  34   1              ax_last = ax_now;
  35   1              return (ax_now);
  36   1      }
  37          int RCLowPassFilter_ay(int ResrcData, int ProcessNiose_Q, int MeasureNoise_R)
  38          {
  39   1              int R = MeasureNoise_R;
  40   1              int Q = ProcessNiose_Q;
  41   1              static int ay_last;
  42   1              int ay_mid = ay_last;
  43   1              long ay_now;
  44   1              static int ay_p_last;
  45   1              long p_mid;
  46   1              long p_now;
  47   1              int kg;
  48   1              long temp;
  49   1              ay_mid = ay_last;
  50   1              p_mid = ay_p_last + Q;
  51   1              temp = p_mid << 15;
  52   1              kg = (temp / ((long)p_mid + R));
  53   1      
  54   1              ay_now = ay_mid + (((long)kg * (ResrcData - ay_mid)) >> 15);
  55   1              p_now = ((long)p_mid * (32768 - kg)) >> 15;
C51 COMPILER V9.54   KALMANFILTER                                                          10/09/2018 19:53:03 PAGE 2   

  56   1              ay_p_last = p_now;
  57   1              ay_last = ay_now;
  58   1              return (ay_now);
  59   1      }
  60          int RCLowPassFilter_az(int ResrcData, int ProcessNiose_Q, int MeasureNoise_R)
  61          {
  62   1              int R = MeasureNoise_R;
  63   1              int Q = ProcessNiose_Q;
  64   1              static int az_last;
  65   1              int az_mid = az_last;
  66   1              long az_now;
  67   1              static int az_p_last;
  68   1              long p_mid;
  69   1              long p_now;
  70   1              int kg;
  71   1              long temp;
  72   1              az_mid = az_last;
  73   1              p_mid = az_p_last + Q;
  74   1              temp = p_mid << 15;
  75   1              kg = (temp / ((long)p_mid + R));
  76   1      
  77   1              az_now = az_mid + (((long)kg * (ResrcData - az_mid)) >> 15);
  78   1              p_now = ((long)p_mid * (32768 - kg)) >> 15;
  79   1              az_p_last = p_now;
  80   1              az_last = az_now;
  81   1              return (az_now);
  82   1      }
  83          #if 0
              int KalmanFilter_gyrox(int ResrcData, int ProcessNiose_Q, int MeasureNoise_R)
              {
                      int R = MeasureNoise_R;
                      int Q = ProcessNiose_Q;
                      static int gyrox_last;
                      int gyrox_mid = gyrox_last;
                      long gyrox_now;
                      static int gyrox_p_last;
                      long gyrox_p_mid;
                      long gyrox_p_now;
                      int gyrox_kg;
                      long gyrox_temp;
                      gyrox_mid = gyrox_last;
                      gyrox_p_mid = gyrox_p_last + Q;
                      gyrox_temp = gyrox_p_mid << 15;
                      gyrox_kg = (gyrox_temp / ((long)gyrox_p_mid + R));
              
                      gyrox_now = gyrox_mid + (((long)gyrox_kg * (ResrcData - gyrox_mid)) >> 15);
                      gyrox_p_now = ((long)gyrox_p_mid * (32768 - gyrox_kg)) >> 15;
                      gyrox_p_last = gyrox_p_now;
                      gyrox_last = gyrox_now;
                      return (gyrox_now);
              }
              int KalmanFilter_gyroy(int ResrcData, int ProcessNiose_Q, int MeasureNoise_R)
              {
                      int R = MeasureNoise_R;
                      int Q = ProcessNiose_Q;
                      static int gyroy_last;
                      int gyroy_mid = gyroy_last;
                      long gyroy_now;
                      static int gyroy_p_last;
                      long p_mid;
                      long p_now;
                      int kg;
C51 COMPILER V9.54   KALMANFILTER                                                          10/09/2018 19:53:03 PAGE 3   

                      long temp;
                      gyroy_mid = gyroy_last;
                      p_mid = gyroy_p_last + Q;
                      temp = p_mid << 15;
                      kg = (temp / ((long)p_mid + R));
              
                      gyroy_now = gyroy_mid + (((long)kg * (ResrcData - gyroy_mid)) >> 15);
                      p_now = ((long)p_mid * (32768 - kg)) >> 15;
                      gyroy_p_last = p_now;
                      gyroy_last = gyroy_now;
                      return (gyroy_now);
              }
              #endif
 131          int RCLowPassFilter_gyroz(int ResrcData, int ProcessNiose_Q, int MeasureNoise_R)
 132          {
 133   1              int R = MeasureNoise_R;
 134   1              int Q = ProcessNiose_Q;
 135   1              static int gyroz_last;
 136   1              int gyroz_mid = gyroz_last;
 137   1              long gyroz_now;
 138   1              static int gyroz_p_last;
 139   1              long p_mid;
 140   1              long p_now;
 141   1              int kg;
 142   1              long temp;
 143   1              gyroz_mid = gyroz_last;
 144   1              p_mid = gyroz_p_last + Q;
 145   1              temp = p_mid << 15;
 146   1              kg = (temp / ((long)p_mid + R));
 147   1      
 148   1              gyroz_now = gyroz_mid + (((long)kg * (ResrcData - gyroz_mid)) >> 15);
 149   1              p_now = ((long)p_mid * (32768 - kg)) >> 15;
 150   1              gyroz_p_last = p_now;
 151   1              gyroz_last = gyroz_now;
 152   1              return (gyroz_now);
 153   1      }
 154          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1240    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16      72
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
