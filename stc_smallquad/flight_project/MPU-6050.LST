C51 COMPILER V9.54   MPU_6050                                                              10/14/2018 19:48:41 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MPU_6050
OBJECT MODULE PLACED IN MPU-6050.OBJ
COMPILER INVOKED BY: E:\KeilC51\C51\BIN\C51.EXE MPU-6050.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //#include <STC15W4K48S4.h>     //STC15W4K48S4 µ¥Æ¬»úÍ·ÎÄ¼þ
   2          #include <intrins.h>
   3          #include <MPU-6050.H>
   4          sbit SCL = P3 ^ 4;   //IICÊ±ÖÓÒý½Å¶¨Òå
   5          sbit SDA = P3 ^ 5;   //IICÊý¾ÝÒý½Å¶¨Òå
   6          
   7          /**
   8           * ÑÓÊ±2us 
   9           * I2CÊ±ÐòÖÐÑÓÊ±ÉèÖÃ£¬¾ßÌå²Î¼û¸÷Ð¾Æ¬µÄÊý¾ÝÊÖ²á6050ÍÆ¼ö×îÐ¡1.3usµ«ÊÇ»á³öÎÊÌâ£¬ÕâÀïÑÓÊ±Êµ¼Ê1.9us×óÓÒ 
  10           *
  11           * @author KingBoy (2018/5/20)
  12           */
  13          void Delay2us(void)
  14          {
  15   1              unsigned char i;
  16   1              i = 2;
  17   1              while (--i);
  18   1      }
  19          
  20          /**
  21           * I2CÆðÊ¼ÐÅºÅ
  22           *
  23           * @author KingBoy (2018/5/20)
  24           *
  25           * @param void
  26           */
  27          void I2C_Start(void)
  28          {
  29   1              SDA = 1;                    //À­¸ßÊý¾ÝÏß
  30   1              SCL = 1;                    //À­¸ßÊ±ÖÓÏß
  31   1              Delay2us();
  32   1              SDA = 0;                    //²úÉúÏÂ½µÑØ
  33   1              Delay2us();
  34   1              SCL = 0;                    //À­µÍÊ±ÖÓÏß
  35   1      }
  36          
  37          /**
  38           * I2CÍ£Ö¹ÐÅºÅ
  39           *
  40           * @author KingBoy (2018/5/20)
  41           *
  42           * @param void
  43           */
  44          void I2C_Stop(void)
  45          {
  46   1              SDA = 0;                    //À­µÍÊý¾ÝÏß
  47   1              SCL = 1;                    //À­¸ßÊ±ÖÓÏß
  48   1              Delay2us();
  49   1              SDA = 1;                    //²úÉúÉÏÉýÑØ
  50   1              Delay2us();
  51   1      }
  52          
  53          /**
  54           * I2C½ÓÊÕÓ¦´ðÐÅºÅ
  55           *
C51 COMPILER V9.54   MPU_6050                                                              10/14/2018 19:48:41 PAGE 2   

  56           * @author KingBoy (2018/5/20)
  57           *
  58           * @param void
  59           *
  60           * @return bit ACK
  61           */
  62          bit I2C_RecvACK(void)
  63          {
  64   1              SCL = 1;                    //À­¸ßÊ±ÖÓÏß?
  65   1              Delay2us();
  66   1              CY = SDA;                   //¶ÁÓ¦´ðÐÅºÅ
  67   1              SCL = 0;                    //À­µÍÊ±ÖÓÏß
  68   1              Delay2us();
  69   1              return (CY);
  70   1      }
  71          
  72          /**
  73           * ÏòI2C×ÜÏß·¢ËÍÒ»¸ö×Ö½ÚÊý¾Ý
  74           *
  75           * @author KingBoy (2018/5/20)
  76           *
  77           * @param dat ÊäÈëÊý¾Ý1×Ö½Ú
  78           */
  79          void I2C_SendByte(unsigned char dat)
  80          {
  81   1              unsigned char i;
  82   1              for (i = 0; i < 8; i++)         //8Î»¼ÆÊýÆ÷
  83   1              {
  84   2                      dat <<= 1;              //ÒÆ³öÊý¾ÝµÄ×î¸ßÎ»
  85   2                      SDA = CY;               //ËÍÊý¾Ý¿Ú
  86   2                      SCL = 1;                //À­¸ßÊ±ÖÓÏß
  87   2                      Delay2us();
  88   2                      SCL = 0;                //À­µÍÊ±ÖÓÏß
  89   2                      Delay2us();
  90   2              }
  91   1              I2C_RecvACK();
  92   1      }
  93          
  94          /**
  95           * ´ÓI2C×ÜÏß½ÓÊÕÒ»¸ö×Ö½ÚÊý¾Ý
  96           *
  97           * @author KingBoy (2018/5/20)
  98           *
  99           * @return unsigned char Êä³ö£¬¶ÁÈ¡µ½µÄ×Ö½Ú
 100           */
 101          unsigned char I2C_RecvByte(void)
 102          {
 103   1              unsigned char i;
 104   1              unsigned char dat = 0;
 105   1              SDA = 1;                    //Ê¹ÄÜÄÚ²¿ÉÏÀ­,×¼±¸¶ÁÈ¡Êý¾Ý,
 106   1              for (i = 0; i < 8; i++)         //8Î»¼ÆÊýÆ÷
 107   1              {
 108   2                      dat <<= 1;
 109   2                      SCL = 1;                //À­¸ßÊ±ÖÓÏß
 110   2                      Delay2us();
 111   2                      dat |= SDA;             //¶ÁÊý¾Ý
 112   2                      SCL = 0;                //À­µÍÊ±ÖÓÏß
 113   2                      Delay2us();
 114   2              }
 115   1              return (dat);
 116   1      }
 117          /**
C51 COMPILER V9.54   MPU_6050                                                              10/14/2018 19:48:41 PAGE 3   

 118           * ÏòI2CÉè±¸Ð´ÈëÒ»¸ö×Ö½ÚÊý¾Ý
 119           *
 120           * @author KingBoy (2018/5/20)
 121           *
 122           * @param REG_Address ÊäÈë£ºµØÖ·
 123           * @param REG_data ÊäÈë£ºÊý¾Ý
 124           */
 125          void Single_WriteI2C(unsigned char REG_Address, unsigned char REG_data)
 126          {
 127   1              I2C_Start();                  //ÆðÊ¼ÐÅºÅ
 128   1              I2C_SendByte(SLAVE_ADDR);   //·¢ËÍÉè±¸µØÖ·+Ð´ÐÅºÅ
 129   1              I2C_SendByte(REG_Address);    //ÄÚ²¿¼Ä´æÆ÷µØÖ·£¬
 130   1              I2C_SendByte(REG_data);       //ÄÚ²¿¼Ä´æÆ÷Êý¾Ý£¬
 131   1              I2C_Stop();                   //·¢ËÍÍ£Ö¹ÐÅºÅ
 132   1      }
 133          
 134          
 135          
 136          /**
 137           * ³õÊ¼»¯MPU6050
 138           * @brief ½â³ýÐÝÃß×´Ì¬
 139           * ÍÓÂÝÒÇ125hz 21HZÂË²¨ÑÓÊ±A8.5ms G8.3ms
 140           * ´Ë´¦È¡ÖµÓ¦Ïàµ±×¢Òâ£¬ÑÓÊ±ÓëÏµÍ³ÖÜÆÚÏà½üÎªÒË
 141           * ÍÓÂÝÒÇ500¶È/S 65.5LSB/g
 142           * ¼ÓËÙ¶È+-16g  8192LSB/g
 143           *
 144           * @author KingBoy (2018/5/20)
 145           *
 146           * @param void
 147           */
 148          void Init_MPU6050(void)
 149          {
 150   1              Single_WriteI2C(PWR_MGMT_1, 0x00);  //½â³ýÐÝÃß×´Ì¬
 151   1              Single_WriteI2C(SMPLRT_DIV, 0x07);  //ÍÓÂÝÒÇ125hz
 152   1              Single_WriteI2C(CONFIG, 0x04);      //21HZÂË²¨ ÑÓÊ±A8.5ms G8.3ms  ´Ë´¦È¡ÖµÓ¦Ïàµ±×¢Òâ£¬ÑÓÊ±ÓëÏµÍ³ÖÜÆÚÏà½üÎ
             -ªÒË
 153   1              Single_WriteI2C(GYRO_CONFIG, 0x08); //ÍÓÂÝÒÇ500¶È/S 65.5LSB/g
 154   1              Single_WriteI2C(ACCEL_CONFIG, 0x18); //¼ÓËÙ¶È+-16g  8192LSB/g
 155   1      }
 156          #if 0
              /**
               * ºÏ³ÉÊý¾Ý
               *
               * @author KingBoy (2018/5/20)
               *
               * @param REG_Address ´ÓÕâ¸öµØÖ·¶ÁÊý¾Ý
               *
               * @return int uint8ºÏ³ÉÎªint16
               */
              int GetData(unsigned char REG_Address)
              {
                      char H,L;
                      H = Single_ReadI2C(REG_Address);
                      L = Single_ReadI2C(REG_Address+1);
              //      return (H<<8)+L;   //ºÏ³ÉÊý¾Ý
                      return (((u16)H << 8) + L);   //ºÏ³ÉÊý¾Ý
              }
              /**
               * ´ÓI2CÉè±¸¶ÁÈ¡Ò»¸ö×Ö½ÚÊý¾Ý
               *
               * @author KingBoy (2018/5/20)
               *
C51 COMPILER V9.54   MPU_6050                                                              10/14/2018 19:48:41 PAGE 4   

               * @param REG_Address ÊäÈë£ºµØÖ·
               *
               * @return unsigned char Êä³ö£º¶Áµ½µÄÊý¾Ý
               */
              unsigned char Single_ReadI2C(unsigned char REG_Address)
              {
                      unsigned char REG_data;
                      I2C_Start();                   //ÆðÊ¼ÐÅºÅ
                      I2C_SendByte(SlaveAddress);    //·¢ËÍÉè±¸µØÖ·+Ð´ÐÅºÅ
                      I2C_SendByte(REG_Address);     //·¢ËÍ´æ´¢µ¥ÔªµØÖ·£¬´Ó0¿ªÊ¼
                      I2C_Start();                   //ÆðÊ¼ÐÅºÅ
                      I2C_SendByte(SlaveAddress+1);  //·¢ËÍÉè±¸µØÖ·+¶ÁÐÅºÅ
                      REG_data=I2C_RecvByte();       //¶Á³ö¼Ä´æÆ÷Êý¾Ý
                      
                      SDA = 1;                    //Ð´Ó¦´ðÐÅºÅ
                      SCL = 1;                    //À­¸ßÊ±ÖÓÏß
                      Delay2us();                 //ÑÓÊ±
                      SCL = 0;                    //À­µÍÊ±ÖÓÏß
                      Delay2us();                 //ÑÓÊ±
                      
                      I2C_Stop();                    //Í£Ö¹ÐÅºÅ
                      return REG_data;
              }
              #endif
 203          /**
 204           * Ö±½Ó´Ó6050¶ÁÈ¡Êý¾Ý
 205           *
 206           * @author KingBoy (2018/5/20)
 207           *
 208           * @param buf
 209           */
 210          void Read_MPU6050(unsigned char *buf)
 211          {
 212   1              unsigned char i;
 213   1      
 214   1              I2C_Start();                  //ÆðÊ¼ÐÅºÅ
 215   1              I2C_SendByte(SLAVE_ADDR);   //·¢ËÍÉè±¸µØÖ·+Ð´ÐÅºÅ
 216   1              I2C_SendByte(ACCEL_XOUT_H);    //ÄÚ²¿¼Ä´æÆ÷µØÖ·£¬
 217   1              I2C_Start();                   //ÆðÊ¼ÐÅºÅ
 218   1              I2C_SendByte(SLAVE_ADDR + 1);  //·¢ËÍÉè±¸µØÖ·+¶ÁÐÅºÅ
 219   1              for (i = 0; i < 13; i++)
 220   1              {
 221   2                      buf[i] = I2C_RecvByte();    //¶Á³ö¼Ä´æÆ÷Êý¾Ý
 222   2                      SDA = 0;                    //Ð´Ó¦´ðÐÅºÅ
 223   2                      SCL = 1;                    //À­¸ßÊ±ÖÓÏß
 224   2                      Delay2us();
 225   2                      SCL = 0;                    //À­µÍÊ±ÖÓÏß
 226   2                      Delay2us();
 227   2              }
 228   1              buf[i] = I2C_RecvByte();    //×îºóÒ»¸ö×Ö½Ú
 229   1              SDA = 1;                    //Ð´·ÇÓ¦´ðÐÅºÅ
 230   1              SCL = 1;                    //À­¸ßÊ±ÖÓÏß
 231   1              Delay2us();
 232   1              SCL = 0;                    //À­µÍÊ±ÖÓÏß
 233   1              Delay2us();
 234   1              I2C_Stop();                    //Í£Ö¹ÐÅºÅ
 235   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    266    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   MPU_6050                                                              10/14/2018 19:48:41 PAGE 5   

   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
